#include <SPI.h>
#include <MFRC522.h>

#define RST_PIN 9      // Pin RST del RC522
#define SS_PIN 10      // Pin SDA del RC522

MFRC522 mfrc522(SS_PIN, RST_PIN);  // Crear instancia del lector

// Lista de tarjetas autorizadas (UIDs en MAYÚSCULAS)
String tarjetasPermitidas[] = {
  "AB12CD34",
  "11223344",
  "A1B2C3D4"
};

// Función para verificar si un UID está en la lista
bool esValida(String uid) {
  for (int i = 0; i < sizeof(tarjetasPermitidas) / sizeof(tarjetasPermitidas[0]); i++) {
    if (tarjetasPermitidas[i] == uid) {
      return true;
    }
  }
  return false;
}

void setup() {
  Serial.begin(9600);     // Comunicación serial con Node.js
  SPI.begin();            // Iniciar bus SPI
  mfrc522.PCD_Init();     // Iniciar el lector RFID
  Serial.println("Listo para leer tarjetas...");
}

void loop() {
  // Verificar si hay una tarjeta presente
  if (!mfrc522.PICC_IsNewCardPresent()) return;
  if (!mfrc522.PICC_ReadCardSerial()) return;

  // Leer el UID de la tarjeta
  String uid = "";
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    uid += (mfrc522.uid.uidByte[i] < 0x10 ? "0" : "");
    uid += String(mfrc522.uid.uidByte[i], HEX);
  }

  uid.toUpperCase(); // Convertir UID a mayúsculas

  if (esValida(uid)) {
    Serial.println(uid);  // Enviar UID autorizado por el puerto serial
  } else {
    Serial.println("TARJETA NO AUTORIZADA");
  }

  delay(1500);  // Esperar para evitar lecturas repetidas
}
